Step 1:
Current State: 0
Stack Contents: [[0 <EOF, "$", 0, 0>]]
Input Position: <NUM, "2", 1, 0>
Operation: SHIFT
Action: Shift to state 5

Step 2:
Current State: 5
Stack Contents: [[0 <EOF, "$", 0, 0>] [5 <NUM, "2", 1, 0>]]
Input Position: <PLUS, "+", 1, 9>
Operation: REDUCE
Action: Reduce by rule 7: f → NUM

Step 3:
Current State: 3
Stack Contents: [[0 <EOF, "$", 0, 0>] [3 <LPAREN, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 9>
Operation: REDUCE
Action: Reduce by rule 5: t → f

Step 4:
Current State: 2
Stack Contents: [[0 <EOF, "$", 0, 0>] [2 <STAR, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 9>
Operation: REDUCE
Action: Reduce by rule 3: e → t

Step 5:
Current State: 1
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 9>
Operation: SHIFT
Action: Shift to state 6

Step 6:
Current State: 6
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>]]
Input Position: <NUM, "3", 1, 19>
Operation: SHIFT
Action: Shift to state 5

Step 7:
Current State: 5
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [5 <NUM, "3", 1, 19>]]
Input Position: <STAR, "*", 1, 28>
Operation: REDUCE
Action: Reduce by rule 7: f → NUM

Step 8:
Current State: 3
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [3 <LPAREN, "non-terminal", 0, 0>]]
Input Position: <STAR, "*", 1, 28>
Operation: REDUCE
Action: Reduce by rule 5: t → f

Step 9:
Current State: 9
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>]]
Input Position: <STAR, "*", 1, 28>
Operation: SHIFT
Action: Shift to state 7

Step 10:
Current State: 7
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>]]
Input Position: <LPAREN, "(", 1, 38>
Operation: SHIFT
Action: Shift to state 4

Step 11:
Current State: 4
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>]]
Input Position: <NUM, "4", 1, 50>
Operation: SHIFT
Action: Shift to state 5

Step 12:
Current State: 5
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [5 <NUM, "4", 1, 50>]]
Input Position: <PLUS, "+", 1, 59>
Operation: REDUCE
Action: Reduce by rule 7: f → NUM

Step 13:
Current State: 3
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [3 <LPAREN, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 59>
Operation: REDUCE
Action: Reduce by rule 5: t → f

Step 14:
Current State: 2
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [2 <STAR, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 59>
Operation: REDUCE
Action: Reduce by rule 3: e → t

Step 15:
Current State: 8
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>]]
Input Position: <PLUS, "+", 1, 59>
Operation: SHIFT
Action: Shift to state 6

Step 16:
Current State: 6
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 59>]]
Input Position: <NUM, "5", 1, 69>
Operation: SHIFT
Action: Shift to state 5

Step 17:
Current State: 5
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 59>] [5 <NUM, "5", 1, 69>]]
Input Position: <RPAREN, ")", 1, 78>
Operation: REDUCE
Action: Reduce by rule 7: f → NUM

Step 18:
Current State: 3
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 59>] [3 <LPAREN, "non-terminal", 0, 0>]]
Input Position: <RPAREN, ")", 1, 78>
Operation: REDUCE
Action: Reduce by rule 5: t → f

Step 19:
Current State: 9
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 59>] [9 <STAR, "non-terminal", 0, 0>]]
Input Position: <RPAREN, ")", 1, 78>
Operation: REDUCE
Action: Reduce by rule 2: e → e + t

Step 20:
Current State: 8
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>]]
Input Position: <RPAREN, ")", 1, 78>
Operation: SHIFT
Action: Shift to state 11

Step 21:
Current State: 11
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [4 <LPAREN, "(", 1, 38>] [8 <PLUS, "non-terminal", 0, 0>] [11 <RPAREN, ")", 1, 78>]]
Input Position: <EOF, "EOF", 1, 89>
Operation: REDUCE
Action: Reduce by rule 6: f → (e)

Step 22:
Current State: 10
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>] [7 <STAR, "*", 1, 28>] [10 <LPAREN, "non-terminal", 0, 0>]]
Input Position: <EOF, "EOF", 1, 89>
Operation: REDUCE
Action: Reduce by rule 4: t → t * f

Step 23:
Current State: 9
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>] [6 <PLUS, "+", 1, 9>] [9 <STAR, "non-terminal", 0, 0>]]
Input Position: <EOF, "EOF", 1, 89>
Operation: REDUCE
Action: Reduce by rule 2: e → e + t

Step 24:
Current State: 1
Stack Contents: [[0 <EOF, "$", 0, 0>] [1 <PLUS, "non-terminal", 0, 0>]]
Input Position: <EOF, "EOF", 1, 89>
Operation: ACCEPT
Action: Input accepted

